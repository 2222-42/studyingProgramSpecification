//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-08-28 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap4/binsearch.vdmsl".


#include "binsearch.h"


static Int vdm_binsearch_N;

static Sequence vdm_binsearch_a;

TYPE_binsearch_array &TYPE_binsearch_array::Init (const Int &p1, const type_iL &p2) {
  this->SetField(1, p1);
  this->SetField(2, p2);
  return * this;
}

Int TYPE_binsearch_array::get_N () const {
  return this->GetInt(1);
}

void TYPE_binsearch_array::set_N (const Int &p) {
  this->SetField(1, p);
}

type_iL TYPE_binsearch_array::get_a () const {
  return this->GetSequence(2);
}

void TYPE_binsearch_array::set_a (const type_iL &p) {
  this->SetField(2, p);
}

void init_binsearch_VDMLib () {
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_binsearch_array, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_binsearch_array, L"binsearch`array");
  AddRecordTag(L"binsearch`array", TAG_TYPE_binsearch_array);
}

#include "binsearch_userimpl.cpp"


void init_binsearch () {
  init_binsearch_VDMLib();
}

#ifndef DEF_binsearch_pre_binsearch

Bool vdm_binsearch_pre_binsearch (const Int &var_1_1, const TYPE_binsearch_array &var_2_2) {
  const Int vdm_binsearch_x (var_1_1);
  const Int vdm_binsearch_N (var_2_2.GetInt(pos_binsearch_array_N));
  const Sequence vdm_binsearch_a (var_2_2.GetSequence(pos_binsearch_array_a));
  Bool varRes_3;
  if (vdm_binsearch_N.GetValue() == vdm_binsearch_a.Length()) {
    bool tmpQuant_9 = true;
    const Set e1_set_12 (vdm_binsearch_a.Inds());
    Set tmpSet_29 (e1_set_12);
    Generic tmpe_28;
    for (bool bb_27 = tmpSet_29.First(tmpe_28); bb_27 && tmpQuant_9; bb_27 = tmpSet_29.Next(tmpe_28)) {
      const Int vdm_binsearch_j (tmpe_28);
      Set tmpSet_26 (e1_set_12);
      Generic tmpe_25;
      for (bool bb_24 = tmpSet_26.First(tmpe_25); bb_24 && tmpQuant_9; bb_24 = tmpSet_26.Next(tmpe_25)) {
        const Int vdm_binsearch_i (tmpe_25);
        if (!((vdm_binsearch_i.GetValue() < vdm_binsearch_j.GetValue()) ? ((static_cast<Int>(vdm_binsearch_a[vdm_binsearch_i])).GetValue() <= (static_cast<Int>(vdm_binsearch_a[vdm_binsearch_j])).GetValue()) : true)) {
          tmpQuant_9 = false;
        }
      }
    }
    varRes_3 = Bool(tmpQuant_9);
  }
  else {
    varRes_3 = Bool(false);
  }
  return varRes_3;
}

#endif // DEF_binsearch_pre_binsearch

#ifndef DEF_binsearch_post_binsearch

Bool vdm_binsearch_post_binsearch (const Int &var_1_1, const type_bU2P &var_2_2, const TYPE_binsearch_array &var_3_3, const TYPE_binsearch_array &var_4_4) {
  const Int vdm_binsearch_x (var_1_1);
  const Tuple vdm_binsearch_out (var_2_2);
  const Int _vdm_binsearch_N (var_3_3.GetInt(pos_binsearch_array_N));
  const Sequence _vdm_binsearch_a (var_3_3.GetSequence(pos_binsearch_array_a));
  const Int vdm_binsearch_N (var_4_4.GetInt(pos_binsearch_array_N));
  const Sequence vdm_binsearch_a (var_4_4.GetSequence(pos_binsearch_array_a));
  Bool varRes_5;
  if (vdm_binsearch_a.Elems().InSet(vdm_binsearch_x)) {
    Bool var2_10;
    {
      Int vdm_binsearch_i;
      bool succ_14 = false;
      Set tmpSet_22 (vdm_binsearch_a.Inds());
      Generic tmpe_21;
      for (bool bb_20 = tmpSet_22.First(tmpe_21); bb_20 && !succ_14; bb_20 = tmpSet_22.Next(tmpe_21)) {
        const Int tmpElem_11 (tmpe_21);
        vdm_binsearch_i = tmpElem_11;
        if (vdm_binsearch_a.OutOfRange(vdm_binsearch_i.GetValue())) {
          CGUTIL::RunTime(L"Illegal index");
        }
        succ_14 = ((static_cast<Int>(vdm_binsearch_a[vdm_binsearch_i])).GetValue() == vdm_binsearch_x.GetValue());
      }
      if (!succ_14) {
        CGUTIL::RunTime(L"The binding environment was empty");
      }
      var2_10 = Bool((vdm_binsearch_out == mk_(Bool(true), vdm_binsearch_i)) ? ((!vdm_binsearch_a.Elems().InSet(vdm_binsearch_x)) ? (vdm_binsearch_out == mk_(Bool(false), Nil())) : true) : false);
    }
    varRes_5 = var2_10;
  }
  else {
    varRes_5 = Bool(true);
  }
  return varRes_5;
}

#endif // DEF_binsearch_post_binsearch


