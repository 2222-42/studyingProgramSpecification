//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-08-28 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap4/partition.vdmsl".

#ifndef _partition_h
#define _partition_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "partition_anonym.h"


enum {
  vdm_partition_array = TAG_TYPE_partition_array,
  length_partition_array = 2,
  pos_partition_array_N = 1,
  pos_partition_array_x = 2
};

class TYPE_partition_array : public Record {
public:
  TYPE_partition_array () : Record(TAG_TYPE_partition_array, 2) {}

  TYPE_partition_array &Init (const Int &p1, const type_iL &p2);
  TYPE_partition_array (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_partition_array";
  }

  Int get_N () const;
  void set_N (const Int &p);
  type_iL get_x () const;
  void set_x (const type_iL &p);
};

void init_partition ();

Int vdm_partition_numberof (const Int &, const type_iL &);

void vdm_partition_partition ();

Bool vdm_partition_pre_partition (const TYPE_partition_array &);

Bool vdm_partition_post_partition (const TYPE_partition_array &, const TYPE_partition_array &);

Bool vdm_partition_partitioned (const type_iL &, const Int &);

Bool vdm_partition_permutation (const type_iL &, const type_iL &);


#endif // _partition_h
