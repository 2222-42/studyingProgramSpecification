//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-08-28 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap4/MagicSqr.vdmsl".


#include "MagicSqr.h"

#include "MagicSqr_userimpl.cpp"


void init_MagicSqr () {}

#ifndef DEF_MagicSqr_post_MagicSqr

Bool vdm_MagicSqr_post_MagicSqr (const type_iLL &vdm_MagicSqr_X) {
  Bool varRes_2;
  const Int vdm_MagicSqr_n (Int(vdm_MagicSqr_X.Length()));
  Bool var1_6;
  Bool var1_7;
  bool tmpQuant_9 = true;
  const Set e1_set_12 (vdm_MagicSqr_X.Inds());
  Set tmpSet_21 (e1_set_12);
  Generic tmpe_20;
  for (bool bb_19 = tmpSet_21.First(tmpe_20); bb_19 && tmpQuant_9; bb_19 = tmpSet_21.Next(tmpe_20)) {
    const Int vdm_MagicSqr_i (tmpe_20);
    if (!((static_cast<Sequence>(vdm_MagicSqr_X[vdm_MagicSqr_i])).Length() == vdm_MagicSqr_n.GetValue())) {
      tmpQuant_9 = false;
    }
  }
  if (tmpQuant_9) {
    bool tmpQuant_23 = true;
    const Set e1_set_26 (vdm_MagicSqr_X.Inds());
    Set tmpSet_51 (e1_set_26);
    Generic tmpe_50;
    for (bool bb_49 = tmpSet_51.First(tmpe_50); bb_49 && tmpQuant_23; bb_49 = tmpSet_51.Next(tmpe_50)) {
      const Int vdm_MagicSqr_j (tmpe_50);
      Set tmpSet_48 (e1_set_26);
      Generic tmpe_47;
      for (bool bb_46 = tmpSet_48.First(tmpe_47); bb_46 && tmpQuant_23; bb_46 = tmpSet_48.Next(tmpe_47)) {
        const Int vdm_MagicSqr_i (tmpe_47);
        Bool pred_27;
        Sequence argTmp_34 (vdm_MagicSqr_X[vdm_MagicSqr_i]);
        if (argTmp_34.OutOfRange(vdm_MagicSqr_j.GetValue())) {
          CGUTIL::RunTime(L"Illegal index");
        }
        if (1 <= (static_cast<Int>(argTmp_34[vdm_MagicSqr_j])).GetValue()) {
          Sequence argTmp_41 (vdm_MagicSqr_X[vdm_MagicSqr_i]);
          if (argTmp_41.OutOfRange(vdm_MagicSqr_j.GetValue())) {
            CGUTIL::RunTime(L"Illegal index");
          }
          pred_27 = Bool((static_cast<Int>(argTmp_41[vdm_MagicSqr_j])).GetValue() <= (vdm_MagicSqr_n * vdm_MagicSqr_n).GetValue());
        }
        else {
          pred_27 = Bool(false);
        }
        if (!(pred_27.GetValue())) {
          tmpQuant_23 = false;
        }
      }
    }
    var1_7 = Bool(tmpQuant_23);
  }
  else {
    var1_7 = Bool(false);
  }
  if (var1_7.GetValue()) {
    bool tmpQuant_53 = true;
    const Set e1_set_56 (vdm_MagicSqr_X.Inds());
    Set tmpSet_89 (e1_set_56);
    Generic tmpe_88;
    for (bool bb_87 = tmpSet_89.First(tmpe_88); bb_87 && tmpQuant_53; bb_87 = tmpSet_89.Next(tmpe_88)) {
      const Int vdm_MagicSqr_l (tmpe_88);
      Set tmpSet_86 (e1_set_56);
      Generic tmpe_85;
      for (bool bb_84 = tmpSet_86.First(tmpe_85); bb_84 && tmpQuant_53; bb_84 = tmpSet_86.Next(tmpe_85)) {
        const Int vdm_MagicSqr_k (tmpe_85);
        Set tmpSet_83 (e1_set_56);
        Generic tmpe_82;
        for (bool bb_81 = tmpSet_83.First(tmpe_82); bb_81 && tmpQuant_53; bb_81 = tmpSet_83.Next(tmpe_82)) {
          const Int vdm_MagicSqr_j (tmpe_82);
          Set tmpSet_80 (e1_set_56);
          Generic tmpe_79;
          for (bool bb_78 = tmpSet_80.First(tmpe_79); bb_78 && tmpQuant_53; bb_78 = tmpSet_80.Next(tmpe_79)) {
            const Int vdm_MagicSqr_i (tmpe_79);
            Bool pred_57;
            if ((!(vdm_MagicSqr_i.GetValue() == vdm_MagicSqr_k.GetValue())) ? true : (!(vdm_MagicSqr_j.GetValue() == vdm_MagicSqr_l.GetValue()))) {
              Sequence argTmp_70 (vdm_MagicSqr_X[vdm_MagicSqr_i]);
              if (argTmp_70.OutOfRange(vdm_MagicSqr_j.GetValue())) {
                CGUTIL::RunTime(L"Illegal index");
              }
              Sequence argTmp_76 (vdm_MagicSqr_X[vdm_MagicSqr_k]);
              if (argTmp_76.OutOfRange(vdm_MagicSqr_l.GetValue())) {
                CGUTIL::RunTime(L"Illegal index");
              }
              pred_57 = Bool(!((static_cast<Int>(argTmp_70[vdm_MagicSqr_j])).GetValue() == (static_cast<Int>(argTmp_76[vdm_MagicSqr_l])).GetValue()));
            }
            else {
              pred_57 = Bool(true);
            }
            if (!(pred_57.GetValue())) {
              tmpQuant_53 = false;
            }
          }
        }
      }
    }
    var1_6 = Bool(tmpQuant_53);
  }
  else {
    var1_6 = Bool(false);
  }
  if (var1_6.GetValue()) {
    Bool var2_90;
    {
      const Real vdm_MagicSqr_v (vdm_MagicSqr_n * (Int(1) + vdm_MagicSqr_n * vdm_MagicSqr_n) / Int(2));
      Bool var1_101;
      Bool var1_102;
      bool tmpQuant_104 = true;
      const Set e1_set_107 (vdm_MagicSqr_X.Inds());
      Set tmpSet_116 (e1_set_107);
      Generic tmpe_115;
      for (bool bb_114 = tmpSet_116.First(tmpe_115); bb_114 && tmpQuant_104; bb_114 = tmpSet_116.Next(tmpe_115)) {
        const Int vdm_MagicSqr_i (tmpe_115);
        if (!(vdm_MagicSqr_NatSeqSum(vdm_MagicSqr_X[vdm_MagicSqr_i]).GetValue() == vdm_MagicSqr_v.GetValue())) {
          tmpQuant_104 = false;
        }
      }
      if (tmpQuant_104) {
        bool tmpQuant_118 = true;
        const Set e1_set_121 (vdm_MagicSqr_X.Inds());
        Set tmpSet_137 (e1_set_121);
        Generic tmpe_136;
        for (bool bb_135 = tmpSet_137.First(tmpe_136); bb_135 && tmpQuant_118; bb_135 = tmpSet_137.Next(tmpe_136)) {
          const Int vdm_MagicSqr_i (tmpe_136);
          Sequence tmpSeq_125;
          for (int count_126 = 1; count_126 <= vdm_MagicSqr_X.Length(); count_126++) {
            Int vdm_MagicSqr_j (count_126);
            Sequence argTmp_132 (vdm_MagicSqr_X[vdm_MagicSqr_i]);
            if (argTmp_132.OutOfRange(vdm_MagicSqr_j.GetValue())) {
              CGUTIL::RunTime(L"Illegal index");
            }
            tmpSeq_125.ImpAppend(argTmp_132[vdm_MagicSqr_j]);
          }
          if (!(vdm_MagicSqr_NatSeqSum(tmpSeq_125).GetValue() == vdm_MagicSqr_v.GetValue())) {
            tmpQuant_118 = false;
          }
        }
        var1_102 = Bool(tmpQuant_118);
      }
      else {
        var1_102 = Bool(false);
      }
      if (var1_102.GetValue()) {
        Sequence tmpSeq_141;
        for (int count_142 = 1; count_142 <= vdm_MagicSqr_X.Length(); count_142++) {
          Int vdm_MagicSqr_i (count_142);
          Sequence argTmp_148 (vdm_MagicSqr_X[vdm_MagicSqr_i]);
          if (argTmp_148.OutOfRange(vdm_MagicSqr_i.GetValue())) {
            CGUTIL::RunTime(L"Illegal index");
          }
          tmpSeq_141.ImpAppend(argTmp_148[vdm_MagicSqr_i]);
        }
        var1_101 = Bool(vdm_MagicSqr_NatSeqSum(tmpSeq_141).GetValue() == vdm_MagicSqr_v.GetValue());
      }
      else {
        var1_101 = Bool(false);
      }
      if (var1_101.GetValue()) {
        Sequence tmpSeq_154;
        for (int count_155 = 1; count_155 <= vdm_MagicSqr_X.Length(); count_155++) {
          Int vdm_MagicSqr_i (count_155);
          if (vdm_MagicSqr_X.OutOfRange((Int(vdm_MagicSqr_X.Length()) + Int(1) - vdm_MagicSqr_i).GetValue())) {
            CGUTIL::RunTime(L"Illegal index");
          }
          Sequence argTmp_166 (vdm_MagicSqr_X[Int(vdm_MagicSqr_X.Length()) + Int(1) - vdm_MagicSqr_i]);
          if (argTmp_166.OutOfRange(vdm_MagicSqr_i.GetValue())) {
            CGUTIL::RunTime(L"Illegal index");
          }
          tmpSeq_154.ImpAppend(argTmp_166[vdm_MagicSqr_i]);
        }
        var2_90 = Bool(vdm_MagicSqr_NatSeqSum(tmpSeq_154).GetValue() == vdm_MagicSqr_v.GetValue());
      }
      else {
        var2_90 = Bool(false);
      }
    }
    varRes_2 = var2_90;
  }
  else {
    varRes_2 = Bool(false);
  }
  return varRes_2;
}

#endif // DEF_MagicSqr_post_MagicSqr

#ifndef DEF_MagicSqr_NatSeqSum

Int vdm_MagicSqr_NatSeqSum (const type_iL &vdm_MagicSqr_s) {
  Int varRes_2;
  bool succ_3 = false;
  if ((succ_3 = (vdm_MagicSqr_s.IsEmpty()))) {
    varRes_2 = Int(0);
  }
  if (!succ_3) {
    varRes_2 = static_cast<Int>(vdm_MagicSqr_s.Hd()) + vdm_MagicSqr_NatSeqSum(vdm_MagicSqr_s);
  }
  return varRes_2;
}

#endif // DEF_MagicSqr_NatSeqSum


