//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-08-28 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap4/maximum.vdmsl".


#include "maximum.h"

#include "maximum_userimpl.cpp"


void init_maximum () {}

#ifndef DEF_maximum_pre_maximum

Bool vdm_maximum_pre_maximum (const Int &vdm_maximum_N, const type_iL &vdm_maximum_x) {
  return Bool(vdm_maximum_N.GetValue() == vdm_maximum_x.Length());
}

#endif // DEF_maximum_pre_maximum

#ifndef DEF_maximum_post_maximum

Bool vdm_maximum_post_maximum (const Int &vdm_maximum_N, const type_iL &vdm_maximum_x, const Int &vdm_maximum_m) {
  Bool varRes_4;
  if (vdm_maximum_x.Inds().InSet(vdm_maximum_m)) {
    bool tmpQuant_10 = true;
    const Set e1_set_13 (vdm_maximum_x.Inds());
    Set tmpSet_23 (e1_set_13);
    Generic tmpe_22;
    for (bool bb_21 = tmpSet_23.First(tmpe_22); bb_21 && tmpQuant_10; bb_21 = tmpSet_23.Next(tmpe_22)) {
      const Int vdm_maximum_j (tmpe_22);
      if (vdm_maximum_x.OutOfRange(vdm_maximum_m.GetValue())) {
        CGUTIL::RunTime(L"Illegal index");
      }
      if (!((static_cast<Int>(vdm_maximum_x[vdm_maximum_m])).GetValue() >= (static_cast<Int>(vdm_maximum_x[vdm_maximum_j])).GetValue())) {
        tmpQuant_10 = false;
      }
    }
    varRes_4 = Bool(tmpQuant_10);
  }
  else {
    varRes_4 = Bool(false);
  }
  return varRes_4;
}

#endif // DEF_maximum_post_maximum


