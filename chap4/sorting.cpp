//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-08-28 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap4/sorting.vdmsl".


#include "sorting.h"


static Int vdm_sorting_N;

static Sequence vdm_sorting_X;

TYPE_sorting_array &TYPE_sorting_array::Init (const Int &p1, const type_iL &p2) {
  this->SetField(1, p1);
  this->SetField(2, p2);
  return * this;
}

Int TYPE_sorting_array::get_N () const {
  return this->GetInt(1);
}

void TYPE_sorting_array::set_N (const Int &p) {
  this->SetField(1, p);
}

type_iL TYPE_sorting_array::get_X () const {
  return this->GetSequence(2);
}

void TYPE_sorting_array::set_X (const type_iL &p) {
  this->SetField(2, p);
}

void init_sorting_VDMLib () {
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_sorting_array, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_sorting_array, L"sorting`array");
  AddRecordTag(L"sorting`array", TAG_TYPE_sorting_array);
}

#include "sorting_userimpl.cpp"


void init_sorting () {
  init_sorting_VDMLib();
}

#ifndef DEF_sorting_ordered

Bool vdm_sorting_ordered (const type_iL &vdm_sorting_X) {
  bool tmpQuant_3 = true;
  const Set e1_set_6 (vdm_sorting_X.Inds());
  Set tmpSet_23 (e1_set_6);
  Generic tmpe_22;
  for (bool bb_21 = tmpSet_23.First(tmpe_22); bb_21 && tmpQuant_3; bb_21 = tmpSet_23.Next(tmpe_22)) {
    const Int vdm_sorting_j (tmpe_22);
    Set tmpSet_20 (e1_set_6);
    Generic tmpe_19;
    for (bool bb_18 = tmpSet_20.First(tmpe_19); bb_18 && tmpQuant_3; bb_18 = tmpSet_20.Next(tmpe_19)) {
      const Int vdm_sorting_i (tmpe_19);
      if (!((vdm_sorting_i.GetValue() < vdm_sorting_j.GetValue()) ? ((static_cast<Int>(vdm_sorting_X[vdm_sorting_i])).GetValue() <= (static_cast<Int>(vdm_sorting_X[vdm_sorting_j])).GetValue()) : true)) {
        tmpQuant_3 = false;
      }
    }
  }
  return Bool(tmpQuant_3);
}

#endif // DEF_sorting_ordered

#ifndef DEF_sorting_numberof

Int vdm_sorting_numberof (const Int &vdm_sorting_n, const type_iL &vdm_sorting_s) {
  Set res_s_5;
  const Set e1_set_9 (vdm_sorting_s.Inds());
  Set tmpSet_17 (e1_set_9);
  Generic tmpe_16;
  for (bool bb_15 = tmpSet_17.First(tmpe_16); bb_15; bb_15 = tmpSet_17.Next(tmpe_16)) {
    const Int vdm_sorting_i (tmpe_16);
    if ((static_cast<Int>(vdm_sorting_s[vdm_sorting_i])).GetValue() == vdm_sorting_n.GetValue()) {
      res_s_5.Insert(vdm_sorting_i);
    }
  }
  return Int(res_s_5.Card());
}

#endif // DEF_sorting_numberof

#ifndef DEF_sorting_permutation

Bool vdm_sorting_permutation (const type_iL &vdm_sorting_a, const type_iL &vdm_sorting_b) {
  Bool varRes_3;
  if (vdm_sorting_a.Length() == vdm_sorting_b.Length()) {
    bool tmpQuant_10 = true;
    const Set e1_set_13 (vdm_sorting_a.Elems());
    Set tmpSet_23 (e1_set_13);
    Generic tmpe_22;
    for (bool bb_21 = tmpSet_23.First(tmpe_22); bb_21 && tmpQuant_10; bb_21 = tmpSet_23.Next(tmpe_22)) {
      const Int vdm_sorting_n (tmpe_22);
      if (!(vdm_sorting_numberof(vdm_sorting_n, vdm_sorting_a).GetValue() == vdm_sorting_numberof(vdm_sorting_n, vdm_sorting_b).GetValue())) {
        tmpQuant_10 = false;
      }
    }
    varRes_3 = Bool(tmpQuant_10);
  }
  else {
    varRes_3 = Bool(false);
  }
  return varRes_3;
}

#endif // DEF_sorting_permutation

#ifndef DEF_sorting_pre_sorting

Bool vdm_sorting_pre_sorting (const TYPE_sorting_array &var_1_1) {
  const Int vdm_sorting_N (var_1_1.GetInt(pos_sorting_array_N));
  const Sequence vdm_sorting_X (var_1_1.GetSequence(pos_sorting_array_X));
  return Bool(vdm_sorting_N.GetValue() == vdm_sorting_X.Length());
}

#endif // DEF_sorting_pre_sorting

#ifndef DEF_sorting_post_sorting

Bool vdm_sorting_post_sorting (const TYPE_sorting_array &var_1_1, const TYPE_sorting_array &var_2_2) {
  const Int _vdm_sorting_N (var_1_1.GetInt(pos_sorting_array_N));
  const Sequence _vdm_sorting_X (var_1_1.GetSequence(pos_sorting_array_X));
  const Int vdm_sorting_N (var_2_2.GetInt(pos_sorting_array_N));
  const Sequence vdm_sorting_X (var_2_2.GetSequence(pos_sorting_array_X));
  return Bool(vdm_sorting_ordered(vdm_sorting_X).GetValue() ? vdm_sorting_permutation(vdm_sorting_X, _vdm_sorting_X).GetValue() : false);
}

#endif // DEF_sorting_post_sorting


