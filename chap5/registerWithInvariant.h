//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2020-09-02 by the VDM-SL to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 09:35:14 +0900)
//
// This file was genereted from "E:/VDM-SL/studyingProgramSpecification/chap5/registerWithInvariant.vdmsl".

#ifndef _registerWithInvariant_h
#define _registerWithInvariant_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "registerWithInvariant_anonym.h"


enum {
  vdm_registerWithInvariant_cInfo = TAG_TYPE_registerWithInvariant_cInfo,
  length_registerWithInvariant_cInfo = 2,
  pos_registerWithInvariant_cInfo_capacity = 1,
  pos_registerWithInvariant_cInfo_fee = 2,
  vdm_registerWithInvariant_pInfo = TAG_TYPE_registerWithInvariant_pInfo,
  length_registerWithInvariant_pInfo = 4,
  pos_registerWithInvariant_pInfo_email = 1,
  pos_registerWithInvariant_pInfo_address = 2,
  pos_registerWithInvariant_pInfo_telephone = 3,
  pos_registerWithInvariant_pInfo_age = 4,
  vdm_registerWithInvariant_Address = TAG_TYPE_registerWithInvariant_Address,
  length_registerWithInvariant_Address = 3,
  pos_registerWithInvariant_Address_prefecture = 1,
  pos_registerWithInvariant_Address_city = 2,
  pos_registerWithInvariant_Address_detail = 3,
  vdm_registerWithInvariant_RegisterBook = TAG_TYPE_registerWithInvariant_RegisterBook,
  length_registerWithInvariant_RegisterBook = 3,
  pos_registerWithInvariant_RegisterBook_courses = 1,
  pos_registerWithInvariant_RegisterBook_person = 2,
  pos_registerWithInvariant_RegisterBook_courseReg = 3,
  vdm_registerWithInvariant_RegisterBookAlt = TAG_TYPE_registerWithInvariant_RegisterBookAlt,
  length_registerWithInvariant_RegisterBookAlt = 3,
  pos_registerWithInvariant_RegisterBookAlt_courses = 1,
  pos_registerWithInvariant_RegisterBookAlt_person = 2,
  pos_registerWithInvariant_RegisterBookAlt_courseReg = 3,
  vdm_registerWithInvariant_RegisterBookInv = TAG_TYPE_registerWithInvariant_RegisterBookInv,
  length_registerWithInvariant_RegisterBookInv = 3,
  pos_registerWithInvariant_RegisterBookInv_courses = 1,
  pos_registerWithInvariant_RegisterBookInv_person = 2,
  pos_registerWithInvariant_RegisterBookInv_courseReg = 3
};

class TYPE_registerWithInvariant_cInfo : public Record {
public:
  TYPE_registerWithInvariant_cInfo () : Record(TAG_TYPE_registerWithInvariant_cInfo, 2) {}

  TYPE_registerWithInvariant_cInfo &Init (const Int &p1, const TYPE_registerWithInvariant_Yen &p2);
  TYPE_registerWithInvariant_cInfo (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_cInfo";
  }

  Int get_capacity () const;
  void set_capacity (const Int &p);
  TYPE_registerWithInvariant_Yen get_fee () const;
  void set_fee (const TYPE_registerWithInvariant_Yen &p);
};


class TYPE_registerWithInvariant_pInfo : public Record {
public:
  TYPE_registerWithInvariant_pInfo () : Record(TAG_TYPE_registerWithInvariant_pInfo, 4) {}

  TYPE_registerWithInvariant_pInfo &Init (const TYPE_registerWithInvariant_Email &p1, const TYPE_registerWithInvariant_Address &p2, const Generic &p3, const Int &p4);
  TYPE_registerWithInvariant_pInfo (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_pInfo";
  }

  TYPE_registerWithInvariant_Email get_email () const;
  void set_email (const TYPE_registerWithInvariant_Email &p);
  TYPE_registerWithInvariant_Address get_address () const;
  void set_address (const TYPE_registerWithInvariant_Address &p);
  Generic get_telephone () const;
  void set_telephone (const Generic &p);
  Int get_age () const;
  void set_age (const Int &p);
};


class TYPE_registerWithInvariant_Address : public Record {
public:
  TYPE_registerWithInvariant_Address () : Record(TAG_TYPE_registerWithInvariant_Address, 3) {}

  TYPE_registerWithInvariant_Address &Init (const TYPE_registerWithInvariant_Prefecture &p1, const TYPE_registerWithInvariant_City &p2, const TYPE_registerWithInvariant_Detail &p3);
  TYPE_registerWithInvariant_Address (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_Address";
  }

  TYPE_registerWithInvariant_Prefecture get_prefecture () const;
  void set_prefecture (const TYPE_registerWithInvariant_Prefecture &p);
  TYPE_registerWithInvariant_City get_city () const;
  void set_city (const TYPE_registerWithInvariant_City &p);
  TYPE_registerWithInvariant_Detail get_detail () const;
  void set_detail (const TYPE_registerWithInvariant_Detail &p);
};


class TYPE_registerWithInvariant_RegisterBook : public Record {
public:
  TYPE_registerWithInvariant_RegisterBook () : Record(TAG_TYPE_registerWithInvariant_RegisterBook, 3) {}

  TYPE_registerWithInvariant_RegisterBook &Init (const type_tS &p1, const type_t27registerWithInvariant_pInfoCM &p2, const type_ttM &p3);
  TYPE_registerWithInvariant_RegisterBook (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_RegisterBook";
  }

  type_tS get_courses () const;
  void set_courses (const type_tS &p);
  type_t27registerWithInvariant_pInfoCM get_person () const;
  void set_person (const type_t27registerWithInvariant_pInfoCM &p);
  type_ttM get_courseReg () const;
  void set_courseReg (const type_ttM &p);
};


class TYPE_registerWithInvariant_RegisterBookAlt : public Record {
public:
  TYPE_registerWithInvariant_RegisterBookAlt () : Record(TAG_TYPE_registerWithInvariant_RegisterBookAlt, 3) {}

  TYPE_registerWithInvariant_RegisterBookAlt &Init (const type_t27registerWithInvariant_cInfoCM &p1, const type_t27registerWithInvariant_pInfoCM &p2, const type_ttM &p3);
  TYPE_registerWithInvariant_RegisterBookAlt (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_RegisterBookAlt";
  }

  type_t27registerWithInvariant_cInfoCM get_courses () const;
  void set_courses (const type_t27registerWithInvariant_cInfoCM &p);
  type_t27registerWithInvariant_pInfoCM get_person () const;
  void set_person (const type_t27registerWithInvariant_pInfoCM &p);
  type_ttM get_courseReg () const;
  void set_courseReg (const type_ttM &p);
};


class TYPE_registerWithInvariant_RegisterBookInv : public Record {
public:
  TYPE_registerWithInvariant_RegisterBookInv () : Record(TAG_TYPE_registerWithInvariant_RegisterBookInv, 3) {}

  TYPE_registerWithInvariant_RegisterBookInv &Init (const type_tS &p1, const type_t27registerWithInvariant_pInfoCM &p2, const type_ttM &p3);
  TYPE_registerWithInvariant_RegisterBookInv (const Common &c) : Record(c) {}

  const wchar_t * GetTypeName () const   {
    return L"TYPE_registerWithInvariant_RegisterBookInv";
  }

  type_tS get_courses () const;
  void set_courses (const type_tS &p);
  type_t27registerWithInvariant_pInfoCM get_person () const;
  void set_person (const type_t27registerWithInvariant_pInfoCM &p);
  type_ttM get_courseReg () const;
  void set_courseReg (const type_ttM &p);
};

Bool vdm_registerWithInvariant_inv_RegisterBookAlt (const TYPE_registerWithInvariant_RegisterBookAlt &);

Bool vdm_registerWithInvariant_inv_RegisterBookInv (const TYPE_registerWithInvariant_RegisterBookInv &);

void init_registerWithInvariant ();

TYPE_registerWithInvariant_RegisterBookInv vdm_registerWithInvariant_Add (const TYPE_registerWithInvariant_Name &, const TYPE_registerWithInvariant_pInfo &, const TYPE_registerWithInvariant_Course &, const TYPE_registerWithInvariant_RegisterBookInv &);

Bool vdm_registerWithInvariant_pre_Add (const TYPE_registerWithInvariant_Name &, const TYPE_registerWithInvariant_pInfo &, const TYPE_registerWithInvariant_Course &, const TYPE_registerWithInvariant_RegisterBookInv &);


#endif // _registerWithInvariant_h
