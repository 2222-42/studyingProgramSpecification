--
-- Module: register
--
-- Description: 
--
-- Version: 
-- Author: 
--

module register

--imports
--  from ModuleA all,
--  from ModuleB all

exports all

definitions

--state Sigma of
--  a : nat
--  b : nat
--  inv mk_Sigma(x,y) == x >= y
--  init s == s = mk_Sigma(0,0)
--end

types
    Name = token;
    RegisterBook = set of Name

values

operations

functions
    Add: Name * RegisterBook -> RegisterBook
    Add(name, book) ==
        book union {name}
    pre name not in set book;

    Delete: Name * RegisterBook -> RegisterBook
    Delete(name, book) ==
        book\{name}
    pre name in set book;

    Number: RegisterBook -> nat
    Number(book) ==
        card book;

end register
